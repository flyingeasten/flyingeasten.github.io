name: 部署博客到 GitHub Pages

# 触发条件：主仓库推送、手动触发
on:
  push:
    branches: [main]
  workflow_dispatch:

# 权限设置（最小化必要权限）
permissions:
  contents: write  # 允许推送代码到分支
  pages: write     # 允许操作Pages服务
  id-token: write  # 用于Pages身份验证

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # 绑定GitHub Pages环境（自动配置）
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 步骤1：拉取主仓库代码（包含子模块）
      - name: 拉取主仓库代码
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # 确保主题等子模块能正常拉取
          fetch-depth: 0           # 拉取完整历史，避免构建问题

      # 步骤2：同步 BlogPosts 仓库文章（优化版本）
      - name: 同步 BlogPosts 仓库文章
        env:
          # 使用PAT确保有足够权限访问BlogPosts仓库
          BLOG_TOKEN: ${{ secrets.BLOG_POSTS_TOKEN }}
        run: |
          POSTS_DIR="content/posts"
          REPO_URL="https://flyingeasten:${BLOG_TOKEN}@github.com/flyingeasten/BlogPosts.git"
          
          # 确保content目录存在
          mkdir -p content
          
          if [ -d "$POSTS_DIR/.git" ]; then
            # 已存在仓库：拉取最新代码
            echo "更新现有文章仓库..."
            cd "$POSTS_DIR"
            git pull --rebase origin main  # 变基拉取，减少合并冲突
            cd -
          else
            # 不存在：克隆仓库
            echo "首次克隆文章仓库..."
            git clone "$REPO_URL" "$POSTS_DIR"
          fi

      # 步骤3：安装 Hugo 扩展版
      - name: 安装 Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 步骤4：构建静态博客页面
      - name: 构建博客
        run: |
          # 显示Hugo版本，便于调试
          hugo version
          # 构建时显示详细日志，方便排查错误
          hugo --minify --verbose

      # 步骤5：部署到 GitHub Pages（使用最新版action）
      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4  # 升级到v4版本，修复部分权限问题
        id: deployment
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          # 可选：强制推送（解决历史冲突）
          force_orphan: true
          # 可选：设置提交信息
          commit_message: "Deploy from GitHub Actions: ${{ github.sha }}"
